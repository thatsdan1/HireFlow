version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hireflow_postgres
    environment:
      POSTGRES_DB: hireflow
      POSTGRES_USER: hireflow_user
      POSTGRES_PASSWORD: hireflow_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hireflow_user -d hireflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hireflow_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: hireflow_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hireflow_network

  # Backend FastAPI Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: hireflow_backend
    environment:
      - DATABASE_URL=postgresql://hireflow_user:hireflow_password@postgres:5432/hireflow
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
      - DEBUG=false
    volumes:
      - ./uploads:/app/uploads
      - ./backend/.env:/app/.env:ro
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hireflow_network
    restart: unless-stopped

  # Frontend React Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: hireflow_frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hireflow_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: hireflow_nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - hireflow_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hireflow_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
